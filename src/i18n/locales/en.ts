export default {
  common: {
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    save: 'Save',
    cancel: 'Cancel',
    delete: 'Delete',
    edit: 'Edit',
    search: 'Search',
    filter: 'Filter',
    close: 'Close',
    confirm: 'Confirm',
    back: 'Back',
    dateStart: 'Start date',
    dateEnd: 'End date',
    create: 'Create',
    view: 'View',
    actions: 'Actions',
    add: 'Add',
    remove: 'Remove',
    yes: 'Yes',
    no: 'No',
  },

  menu: {
    dashboard: 'Dashboard',
    newTransaction: 'New Transaction',
    cashflow: 'Transactions',
    clients: 'Clients',
    products: 'Products',
    services: 'Services',
    users: 'Users',
    settings: 'Settings',
  },

  settings: {
    title: 'Settings',
    theme: 'Theme',
    themeDescription: 'Toggle between light and dark theme',
    currentTheme: 'Current theme',
    light: 'Light',
    dark: 'Dark',
    language: 'Language',
    languageDescription: 'Select application language',
    portuguese: 'Português (Brasil)',
    english: 'English (US)',
    spanish: 'Español',
  },

  dashboard: {
    title: 'Financial Dashboard',
    subtitle: 'Financial overview',
    currentBalance: 'Current Balance',
    periodIncome: 'Period Income',
    periodExpenses: 'Period Expenses',
    cashFlowChart: 'Cash Flow',
    categorySummary: 'Summary by Category',
    recentTransactions: 'Recent Transactions',
    income: 'Income',
    expense: 'Expense',
    noData: 'No data available',
    selectPeriod: 'Select Period',
    customPeriod: 'Custom Period',
    periods: {
      today: 'Today',
      last7days: 'Last 7 days',
      last15days: 'Last 15 days',
      last30days: 'Last 30 days',
      thisMonth: 'This month',
      lastMonth: 'Last month',
      thisQuarter: 'This quarter',
      lastQuarter: 'Last quarter',
      thisSemester: 'This semester',
      lastSemester: 'Last semester',
      thisYear: 'This year',
      lastYear: 'Last year',
      custom: 'Custom',
    },
  },

  transaction: {
    title: 'New Transaction',
    type: 'Transaction Type',
    typeIncome: 'Income',
    typeExpense: 'Expense',
    category: 'Category',
    categoryPlaceholder: 'Select a category',
    amount: 'Amount',
    amountPlaceholder: 'Enter amount',
    description: 'Description',
    descriptionPlaceholder: 'Describe the transaction',
    date: 'Date',
    submit: 'Register Transaction',
    creating: 'Creating...',
    successMessage: 'Transaction registered successfully!',
    errorMessage: 'Error registering transaction',

    categories: {
      income: {
        maintenance: 'Maintenance Service',
        productSale: 'Product Sale',
        partSale: 'Part Sale',
        externalService: 'External Service',
        others: 'Others',
      },
      expense: {
        stockPurchase: 'Stock Purchase',
        partsPurchase: 'Parts Purchase',
        salaries: 'Salaries',
        rent: 'Rent',
        electricity: 'Electricity',
        water: 'Water',
        internet: 'Internet',
        phone: 'Phone',
        maintenance: 'Maintenance',
        taxes: 'Taxes',
        others: 'Others',
      },
    },
  },

  table: {
    category: 'Category',
    type: 'Type',
    quantity: 'Quantity',
    total: 'Total',
    date: 'Date',
    description: 'Description',
    amount: 'Amount',
    noData: 'No data available',
    actions: 'Actions',
    status: 'Status',
    name: 'Name',
    brand: 'Brand',
    price: 'Price',
    stock: 'Stock',
  },

  products: {
    title: 'Products',
    subtitle: 'Inventory and product management',
    code: 'Code',
    barcode: 'Barcode',
    costPrice: 'Cost Price',
    salePrice: 'Sale Price',
    stockQuantity: 'Stock Quantity',
    minStock: 'Minimum Stock',
    unit: 'Unit',
    active: 'Active',
    inactive: 'Inactive',
    lowStock: 'Low Stock',
    searchPlaceholder: 'Search by name, code or brand...',
    filterByCategory: 'Filter by category',
    allCategories: 'All categories',
  },

  services: {
    title: 'Services',
    subtitle: 'Service order management',
    customer: 'Customer',
    motorcycle: 'Motorcycle',
    mechanic: 'Mechanic',
    plate: 'Plate',
    diagnosis: 'Diagnosis',
    laborCost: 'Labor Cost',
    totalCost: 'Total Cost',
    startDate: 'Start Date',
    estimatedEndDate: 'Estimated End Date',
    endDate: 'End Date',
    searchPlaceholder: 'Search by customer, plate or description...',
    filterByStatus: 'Filter by status',
    allStatuses: 'All statuses',
    status: {
      PENDING: 'Pending',
      IN_PROGRESS: 'In Progress',
      COMPLETED: 'Completed',
      CANCELLED: 'Cancelled',
      WAITING_PARTS: 'Waiting Parts',
    },
  },

  cashflow: {
    title: 'Financial Transactions',
    subtitle: 'List of income and expenses',
    transactions: 'Transactions',
    searchPlaceholder: 'Search by description or category...',
    filterByType: 'Filter by type',
    filterByCategory: 'Filter by category',
    allCategories: 'All categories',
    summary: 'Summary',
    balance: 'Balance',
  },

  users: {
    title: 'Users',
    subtitle: 'System user management',
    name: 'Name',
    email: 'Email',
    role: 'Role',
    active: 'Active',
    inactive: 'Inactive',
    createdAt: 'Created at',
    updatedAt: 'Updated at',
    searchPlaceholder: 'Search by name or email...',
    filterByRole: 'Filter by role',
    allRoles: 'All roles',
    roles: {
      ADMIN: 'Administrator',
      MANAGER: 'Manager',
      MECHANIC: 'Mechanic',
      ATTENDANT: 'Attendant',
    },
  },

  confirm: {
    delete: 'Confirm deletion',
    deleteDescription: 'Are you sure you want to delete this item? This action cannot be undone.',
    title: 'Confirm action',
    description: 'Are you sure you want to perform this action?',
  },

  validation: {
    required: 'Required field',
    email: 'Invalid email',
    minLength: 'Minimum {{min}} characters',
    maxLength: 'Maximum {{max}} characters',
    lengthRange: 'Must be between {{min}} and {{max}} characters',
    number: 'Must be a number',
    positiveNumber: 'Must be a positive number',
    cpf: 'Invalid CPF',
    cnpj: 'Invalid CNPJ',
    phone: 'Invalid phone',
    url: 'Invalid URL',
    match: 'Fields do not match',
  },

  errors: {
    // Error Boundary
    boundary: {
      title: 'Something went wrong',
      subtitle: 'An unexpected error occurred in the application',
      retry: 'Try Again',
      goHome: 'Go to Home',
      errorMessage: 'Error message',
      stackTrace: 'Stack trace',
    },

    // API Errors - HTTP Status
    http: {
      400: 'Invalid request',
      401: 'Unauthorized. Please log in again.',
      403: 'Access denied',
      404: 'Resource not found',
      409: 'Data conflict',
      422: 'Invalid data',
      429: 'Too many requests. Please try again later.',
      500: 'Internal server error',
      502: 'Service temporarily unavailable',
      503: 'Service temporarily unavailable',
      504: 'Response timeout',
      unknown: 'Error {{status}}',
    },

    // Error types
    types: {
      network: 'Connection error. Check your internet.',
      timeout: 'Response timeout',
      requestConfig: 'Error configuring request',
      generic: 'An unknown error occurred',
      unknown: 'An unknown error occurred',
    },

    // Retry messages
    retry: {
      retrying: 'Retrying...',
      retryAfter: 'Retrying in {{seconds}}s',
      maxRetries: 'Maximum retry attempts reached',
    },
  },
};
