export default {
  common: {
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    save: 'Save',
    cancel: 'Cancel',
    delete: 'Delete',
    edit: 'Edit',
    search: 'Search',
    filter: 'Filter',
    close: 'Close',
    confirm: 'Confirm',
    back: 'Back',
    dateStart: 'Start date',
    dateEnd: 'End date',
    create: 'Create',
    view: 'View',
    actions: 'Actions',
    add: 'Add',
    remove: 'Remove',
    yes: 'Yes',
    no: 'No',
  },

  menu: {
    dashboard: 'Dashboard',
    newTransaction: 'New Transaction',
    cashflow: 'Transactions',
    clients: 'Clients',
    products: 'Products',
    services: 'Services',
    users: 'Users',
    settings: 'Settings',
  },

  settings: {
    title: 'Settings',
    subtitle: 'Manage system settings',
    theme: 'Theme',
    themeDescription: 'Toggle between light and dark theme',
    currentTheme: 'Current theme',
    light: 'Light',
    dark: 'Dark',
    language: 'Language',
    languageDescription: 'Select application language',
    portuguese: 'Português (Brasil)',
    english: 'English (US)',
    spanish: 'Español',
    general: 'General',
    usersTab: 'Users',
  },

  dashboard: {
    title: 'Financial Dashboard',
    subtitle: 'Financial overview',
    currentBalance: 'Current Balance',
    periodIncome: 'Period Income',
    periodExpenses: 'Period Expenses',
    cashFlowChart: 'Cash Flow',
    categorySummary: 'Summary by Category',
    recentTransactions: 'Recent Transactions',
    income: 'Income',
    expense: 'Expense',
    noData: 'No data available',
    selectPeriod: 'Select Period',
    customPeriod: 'Custom Period',
    periods: {
      today: 'Today',
      last7days: 'Last 7 days',
      last15days: 'Last 15 days',
      last30days: 'Last 30 days',
      thisMonth: 'This month',
      lastMonth: 'Last month',
      thisQuarter: 'This quarter',
      lastQuarter: 'Last quarter',
      thisSemester: 'This semester',
      lastSemester: 'Last semester',
      thisYear: 'This year',
      lastYear: 'Last year',
      custom: 'Custom',
    },
  },

  transaction: {
    title: 'New Transaction',
    type: 'Transaction Type',
    typeIncome: 'Income',
    typeExpense: 'Expense',
    category: 'Category',
    categoryPlaceholder: 'Select a category',
    amount: 'Amount',
    amountPlaceholder: 'Enter amount',
    description: 'Description',
    descriptionPlaceholder: 'Describe the transaction',
    date: 'Date',
    submit: 'Register Transaction',
    creating: 'Creating...',
    successMessage: 'Transaction registered successfully!',
    errorMessage: 'Error registering transaction',

    categories: {
      income: {
        maintenance: 'Maintenance Service',
        productSale: 'Product Sale',
        partSale: 'Part Sale',
        externalService: 'External Service',
        others: 'Others',
      },
      expense: {
        stockPurchase: 'Stock Purchase',
        partsPurchase: 'Parts Purchase',
        salaries: 'Salaries',
        rent: 'Rent',
        electricity: 'Electricity',
        water: 'Water',
        internet: 'Internet',
        phone: 'Phone',
        maintenance: 'Maintenance',
        taxes: 'Taxes',
        others: 'Others',
      },
    },
  },

  table: {
    category: 'Category',
    type: 'Type',
    quantity: 'Quantity',
    total: 'Total',
    date: 'Date',
    description: 'Description',
    amount: 'Amount',
    noData: 'No data available',
    actions: 'Actions',
    status: 'Status',
    name: 'Name',
    brand: 'Brand',
    price: 'Price',
    stock: 'Stock',
  },

  products: {
    title: 'Products',
    subtitle: 'Inventory and product management',
    code: 'Code',
    barcode: 'Barcode',
    costPrice: 'Cost Price',
    salePrice: 'Sale Price',
    stockQuantity: 'Stock Quantity',
    minStock: 'Minimum Stock',
    unit: 'Unit',
    active: 'Active',
    inactive: 'Inactive',
    lowStock: 'Low Stock',
    searchPlaceholder: 'Search by name, code or brand...',
    filterByCategory: 'Filter by category',
    allCategories: 'All categories',
    // Product Form
    newProduct: 'New Product',
    editProduct: 'Edit Product',
    editingProduct: 'Editing',
    newProductSubtitle: 'Register a new product in inventory',
    productName: 'Product Name',
    productNamePlaceholder: 'E.g.: Motul Oil 15W-40',
    productNameRequired: 'Please enter the product name',
    productNameMinLength: 'Name must be at least 3 characters',
    productNameMaxLength: 'Name must be at most 200 characters',
    category: 'Category',
    categoryRequired: 'Please select the category',
    prices: 'Prices',
    costPriceLabel: 'Purchase Price',
    costPriceRequired: 'Enter the purchase price',
    costPricePositive: 'Price must be greater than or equal to zero',
    costPriceTooltip: 'Price at which you purchase the product',
    salePriceLabel: 'Sale Price',
    salePriceRequired: 'Enter the sale price',
    salePricePositive: 'Price must be greater than or equal to zero',
    salePriceTooltip: 'Price at which you sell the product',
    salePriceValidation: 'Sale price must be greater than or equal to purchase price',
    profitMargin: 'Profit Margin',
    profitMarginTooltip: 'Automatically calculated based on prices',
    stock: 'Stock',
    stockQuantityLabel: 'Stock Quantity',
    stockQuantityRequired: 'Enter the quantity',
    stockQuantityPositive: 'Quantity cannot be negative',
    stockQuantityTooltip: 'Current quantity available in stock',
    minStockLabel: 'Minimum Stock (Alert)',
    minStockRequired: 'Enter the minimum stock',
    minStockPositive: 'Value cannot be negative',
    minStockTooltip: 'You will be alerted when stock reaches or falls below this value',
    statusLabel: 'Status',
    statusActive: 'Active',
    statusInactive: 'Inactive',
    createProduct: 'Create Product',
    updateProduct: 'Update Product',
    // Product List
    productListTitle: 'Products',
    productListSubtitle: 'Manage product catalog and inventory',
    product: 'Product',
    purchasePrice: 'Purchase Price',
    salesPriceColumn: 'Sale Price',
    margin: 'Margin',
    stockColumn: 'Stock',
    statusFilter: 'Status',
    all: 'All',
    actives: 'Active',
    inactives: 'Inactive',
    stockFilter: 'Stock',
    lowStockFilter: 'Low Stock',
    clearFilters: 'Clear Filters',
    totalProducts: 'Total: {{total}} products',
    deleteProduct: 'Delete Product',
    deleteProductConfirm: 'Are you sure you want to delete the product "{{name}}"?',
    searchProducts: 'Search by product or category...',
    // Product Category
    categoryTitle: 'Product Categories',
    categorySubtitle: 'Manage product catalog categories',
    newCategory: 'New Category',
    editCategory: 'Edit Category',
    categoryName: 'Category Name',
    linkedProducts: 'Linked Products',
    linkedProductsCount: '{{count}} product(s)',
    createdAt: 'Created at',
    cannotDeleteCategory: 'Cannot delete this category',
    cannotDeleteCategoryMessage: 'This category has {{count}} linked product(s). To delete the category, first remove or reassign the products.',
    understood: 'Understood',
    deleteCategory: 'Delete Category',
    deleteCategoryConfirm: 'Are you sure you want to delete the category "{{name}}"?',
    searchCategory: 'Search by name...',
    totalCategories: 'Total: {{total}} categories',
    // Service (not category!)
    serviceCategory: 'Service',
    newServiceCategory: 'New Service',
    editServiceCategory: 'Edit Service',
    newServiceCategorySubtitle: 'Fill in the new service details',
    editServiceCategorySubtitle: 'Update the service details',
    serviceCategoryName: 'Service Name',
    serviceCategoryNameRequired: 'Please enter the service name',
    serviceCategoryNameMinLength: 'Name must be at least 3 characters',
    serviceCategoryNameMaxLength: 'Name must be at most 255 characters',
    serviceCategoryPlaceholder: 'E.g.: Oil Change, Complete Service, Tire Replacement',
    serviceCost: 'Service Cost ($)',
    serviceCostRequired: 'Please enter the service cost',
    serviceCostPositive: 'Cost must be greater than or equal to zero',
    createServiceCategory: 'Create Service',
    updateServiceCategory: 'Update Service',
    categoryExistsError: 'A service with this name already exists',
  },

  services: {
    title: 'Services',
    subtitle: 'Service order management',
    customer: 'Customer',
    motorcycle: 'Motorcycle',
    mechanic: 'Mechanic',
    plate: 'Plate',
    diagnosis: 'Diagnosis',
    laborCost: 'Labor Cost',
    totalCost: 'Total Cost',
    startDate: 'Start Date',
    estimatedEndDate: 'Estimated End Date',
    endDate: 'End Date',
    searchPlaceholder: 'Search by customer, plate or description...',
    filterByStatus: 'Filter by status',
    allStatuses: 'All statuses',
    // Service Order Form
    newOrder: 'New Service Order',
    editOrder: 'Edit Service Order',
    newOrderSubtitle: 'Fill in the details to create a new order',
    editOrderSubtitle: 'Update the service order details',
    vehicle: 'Vehicle',
    selectVehicle: 'Select a vehicle',
    selectVehiclePlaceholder: 'Select the vehicle',
    customerName: 'Customer Name',
    customerNamePlaceholder: 'Enter or select customer name',
    serviceCategory: 'Service Category',
    selectServiceCategory: 'Select the service category',
    professionalName: 'Professional Name',
    professionalPlaceholder: 'Enter the responsible professional name',
    estimatedLaborCost: 'Estimated Labor Cost ($)',
    serviceDescription: 'Service Description',
    serviceDescriptionPlaceholder: 'Describe the service to be performed',
    diagnosisPlaceholder: 'Diagnosis of the problem found',
    notes: 'Notes',
    notesPlaceholder: 'Additional notes',
    finalizationDate: 'Completion Date',
    finalizationDatePlaceholder: 'Select completion date',
    selectStatus: 'Select status',
    // Steps
    vehicleStep: 'Vehicle',
    vehicleStepDescription: 'Select the vehicle',
    serviceOrderStep: 'Service Order',
    serviceOrderStepDescription: 'Service details',
    // Details
    vehicleClientInfo: 'Vehicle and Customer Information',
    serviceOrderDetails: 'Service Order Details',
    // Actions
    next: 'Next',
    previous: 'Back',
    createOrder: 'Create Service Order',
    updateOrder: 'Update Service Order',
    // Messages
    orderCreatedSuccess: 'Service order created successfully!',
    orderUpdatedSuccess: 'Service order updated successfully!',
    orderSaveError: 'Error saving service order',
    fillRequiredFields: 'Fill in all required fields before continuing',
    // Validations
    vehicleRequired: 'Select a vehicle',
    customerNameRequired: 'Enter customer name',
    serviceCategoryRequired: 'Select service category',
    status: {
      draft: 'Draft',
      in_progress: 'In Progress',
      completed: 'Completed',
      cancelled: 'Cancelled',
      PENDING: 'Pending',
      IN_PROGRESS: 'In Progress',
      COMPLETED: 'Completed',
      CANCELLED: 'Cancelled',
      WAITING_PARTS: 'Waiting Parts',
    },
  },

  cashflow: {
    title: 'Financial Transactions',
    subtitle: 'List of income and expenses',
    transactions: 'Transactions',
    searchPlaceholder: 'Search by description or category...',
    filterByType: 'Filter by type',
    filterByCategory: 'Filter by category',
    allCategories: 'All categories',
    summary: 'Summary',
    balance: 'Balance',
    // Movimentações List
    movementsList: 'Financial Movements',
    movementsListSubtitle: 'View and manage all system transactions',
    newTransaction: 'New Transaction',
    searchMovements: 'Search by description...',
    typeFilter: 'Type',
    income: 'Income',
    expense: 'Expense',
    incomes: 'Income',
    expenses: 'Expenses',
    allTypes: 'All',
    dateRange: 'Period',
    startDate: 'Start Date',
    endDate: 'End Date',
    totalIncome: 'Total Income',
    totalExpense: 'Total Expenses',
    balanceLabel: 'Balance',
    totalMovements: 'Total: {{total}} movements',
    deleteMovement: 'Delete Movement',
    deleteMovementConfirm: 'Are you sure you want to delete this movement?',
    observations: 'Notes (optional)',
    observationsPlaceholder: 'Additional information about the transaction...',
  },

  vehicles: {
    title: 'Vehicles',
    subtitle: 'Registered vehicle management',
    newVehicle: 'New Vehicle',
    registerNewVehicle: 'Register new vehicle',
    registerVehicle: 'Register',
    vehicleRegisteredSuccess: 'Vehicle registered successfully!',
    vehicleRegistrationError: 'Error registering vehicle',
    selectVehicle: 'Select the vehicle',
    noVehicleFound: 'No vehicle found',
    plate: 'Plate',
    plateRequired: 'Plate is required',
    plateLength: 'Plate must be 7 or 8 characters',
    platePlaceholder: 'ABC-1234 or ABC1D23',
    brand: 'Brand',
    brandRequired: 'Brand is required',
    brandPlaceholder: 'E.g.: Honda, Yamaha, Suzuki',
    model: 'Model',
    modelRequired: 'Model is required',
    modelPlaceholder: 'E.g.: CB 300, XRE 190, Intruder 125',
    year: 'Year',
    yearPlaceholder: 'E.g.: 2020',
    color: 'Color',
    colorPlaceholder: 'E.g.: Black, Red, Blue',
    selectServiceCategory: 'Select service category',
    noCategoryFound: 'No category found',
    cost: 'Cost',
  },

  users: {
    title: 'Users',
    subtitle: 'System user management',
    name: 'Name',
    email: 'Email',
    role: 'Role',
    active: 'Active',
    inactive: 'Inactive',
    createdAt: 'Created at',
    updatedAt: 'Updated at',
    searchPlaceholder: 'Search by name or email...',
    filterByRole: 'Filter by role',
    allRoles: 'All roles',
    roles: {
      ADMIN: 'Administrator',
      MANAGER: 'Manager',
      MECHANIC: 'Mechanic',
      ATTENDANT: 'Attendant',
    },
  },

  confirm: {
    delete: 'Confirm deletion',
    deleteDescription: 'Are you sure you want to delete this item? This action cannot be undone.',
    title: 'Confirm action',
    description: 'Are you sure you want to perform this action?',
  },

  validation: {
    required: 'Required field',
    email: 'Invalid email',
    minLength: 'Minimum {{min}} characters',
    maxLength: 'Maximum {{max}} characters',
    lengthRange: 'Must be between {{min}} and {{max}} characters',
    number: 'Must be a number',
    positiveNumber: 'Must be a positive number',
    cpf: 'Invalid CPF',
    cnpj: 'Invalid CNPJ',
    phone: 'Invalid phone',
    url: 'Invalid URL',
    match: 'Fields do not match',
  },

  errors: {
    // Error Boundary
    boundary: {
      title: 'Something went wrong',
      subtitle: 'An unexpected error occurred in the application',
      retry: 'Try Again',
      goHome: 'Go to Home',
      errorMessage: 'Error message',
      stackTrace: 'Stack trace',
    },

    // API Errors - HTTP Status
    http: {
      400: 'Invalid request',
      401: 'Unauthorized. Please log in again.',
      403: 'Access denied',
      404: 'Resource not found',
      409: 'Data conflict',
      422: 'Invalid data',
      429: 'Too many requests. Please try again later.',
      500: 'Internal server error',
      502: 'Service temporarily unavailable',
      503: 'Service temporarily unavailable',
      504: 'Response timeout',
      unknown: 'Error {{status}}',
    },

    // Error types
    types: {
      network: 'Connection error. Check your internet.',
      timeout: 'Response timeout',
      requestConfig: 'Error configuring request',
      generic: 'An unknown error occurred',
      unknown: 'An unknown error occurred',
    },

    // Retry messages
    retry: {
      retrying: 'Retrying...',
      retryAfter: 'Retrying in {{seconds}}s',
      maxRetries: 'Maximum retry attempts reached',
    },
  },
};
