{
  "version": 3,
  "sources": ["../../@antv/g6-extension-react/src/react-node/render18.ts"],
  "sourcesContent": ["import type * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport type { Root } from 'react-dom/client';\n\ntype ContainerType = (Element | DocumentFragment) & {\n  __rc_react_root__?: Root;\n};\n\nconst MARK = '__rc_react_root__';\n\nlet ReactDOMClientPromise: Promise<typeof import('react-dom/client') | null> | null = null;\n\n/**\n * <zh/> 初始化 React 18+ 的 createRoot\n *\n * <en/> Initialize React 18+ createRoot\n * @returns ReactDOMClient\n */\nfunction initReactDOMClient() {\n  if (ReactDOMClientPromise === null) {\n    ReactDOMClientPromise = import('react-dom/client').catch(() => null);\n  }\n  return ReactDOMClientPromise;\n}\n\n/**\n * <zh/> 切换警告\n *\n * <en/> Toggle warning\n * @param skip <zh/> 是否跳过警告 | <en/> Whether to skip the warning\n */\nfunction toggleWarning(skip: boolean) {\n  try {\n    const { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } = ReactDOM as typeof ReactDOM & {\n      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?: {\n        usingClientEntryPoint?: boolean;\n      };\n    };\n\n    if (\n      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED &&\n      typeof __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === 'object'\n    ) {\n      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.usingClientEntryPoint = skip;\n    }\n  } catch {\n    // Silent error\n  }\n}\n\n/**\n * <zh/> 渲染 React 节点(React 18/19)\n *\n * <en/> Render React node(React 18/19)\n * @param node - <zh/> React 节点 | <en/> React node\n * @param container - <zh/> 容器 | <en/> Container\n */\nexport async function render(node: React.ReactNode, container: ContainerType) {\n  const client = await initReactDOMClient();\n  if (!client?.createRoot) {\n    throw new Error('React 18+ createRoot not available');\n  }\n\n  toggleWarning(true);\n  const root = container[MARK] || client.createRoot(container);\n  toggleWarning(false);\n\n  root.render(node);\n  container[MARK] = root;\n}\n\n/**\n * <zh/> 卸载 React 节点(React 18/19)\n *\n * <en/> Unmount React node(React 18/19)\n * @param container - <zh/> 容器 | <en/> Container\n * @returns <zh/> Promise | <en/> Promise\n */\nexport async function unmount(container: ContainerType) {\n  // Delay to unmount to avoid React 18 sync warning\n  return Promise.resolve().then(() => {\n    container[MARK]?.unmount();\n    delete container[MARK];\n  });\n}\n"],
  "mappings": ";;;;;;;;;AACA,eAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO1B,IAAM,OAAO;AAEb,IAAI,wBAAkF;AAQtF,SAAS,qBAAkB;AACzB,MAAI,0BAA0B,MAAM;AAClC,4BAAwB,OAAO,uBAAkB,EAAE,MAAM,MAAM,IAAI;EACrE;AACA,SAAO;AACT;AAQA,SAAS,cAAc,MAAa;AAClC,MAAI;AACF,UAAM,EAAE,mDAAkD,IAAK;AAM/D,QACE,sDACA,OAAO,uDAAuD,UAC9D;AACA,yDAAmD,wBAAwB;IAC7E;EACF,SAAE,IAAM;EAER;AACF;AASM,SAAgB,OAAO,MAAuB,WAAwB;;AAC1E,UAAM,SAAS,MAAM,mBAAkB;AACvC,QAAI,EAAC,WAAM,QAAN,WAAM,SAAA,SAAN,OAAQ,aAAY;AACvB,YAAM,IAAI,MAAM,oCAAoC;IACtD;AAEA,kBAAc,IAAI;AAClB,UAAM,OAAO,UAAU,IAAI,KAAK,OAAO,WAAW,SAAS;AAC3D,kBAAc,KAAK;AAEnB,SAAK,OAAO,IAAI;AAChB,cAAU,IAAI,IAAI;EACpB,CAAC;;AASK,SAAgB,QAAQ,WAAwB;;AAEpD,WAAO,QAAQ,QAAO,EAAG,KAAK,MAAK;;AACjC,OAAA,KAAA,UAAU,IAAI,OAAC,QAAA,OAAA,SAAA,SAAA,GAAE,QAAO;AACxB,aAAO,UAAU,IAAI;IACvB,CAAC;EACH,CAAC;;",
  "names": []
}
