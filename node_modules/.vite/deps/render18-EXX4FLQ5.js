import {
  require_react_dom
} from "./chunk-T6TTW4FJ.js";
import "./chunk-HWTXVAC3.js";
import {
  __toESM
} from "./chunk-PLDDJCW6.js";

// node_modules/@antv/g6-extension-react/esm/react-node/render18.js
var ReactDOM = __toESM(require_react_dom());
var __awaiter = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var MARK = "__rc_react_root__";
var ReactDOMClientPromise = null;
function initReactDOMClient() {
  if (ReactDOMClientPromise === null) {
    ReactDOMClientPromise = import("./react-dom_client.js").catch(() => null);
  }
  return ReactDOMClientPromise;
}
function toggleWarning(skip) {
  try {
    const { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } = ReactDOM;
    if (__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED && typeof __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === "object") {
      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.usingClientEntryPoint = skip;
    }
  } catch (_a) {
  }
}
function render(node, container) {
  return __awaiter(this, void 0, void 0, function* () {
    const client = yield initReactDOMClient();
    if (!(client === null || client === void 0 ? void 0 : client.createRoot)) {
      throw new Error("React 18+ createRoot not available");
    }
    toggleWarning(true);
    const root = container[MARK] || client.createRoot(container);
    toggleWarning(false);
    root.render(node);
    container[MARK] = root;
  });
}
function unmount(container) {
  return __awaiter(this, void 0, void 0, function* () {
    return Promise.resolve().then(() => {
      var _a;
      (_a = container[MARK]) === null || _a === void 0 ? void 0 : _a.unmount();
      delete container[MARK];
    });
  });
}
export {
  render,
  unmount
};
//# sourceMappingURL=render18-EXX4FLQ5.js.map
